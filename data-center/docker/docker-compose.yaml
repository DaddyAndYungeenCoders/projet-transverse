version: "3"
services:
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mqtt
    restart: always
    user: 1000:1000
    volumes:
      - ./mosquitto/config:/mosquitto/config:rw
      - ./mosquitto/utils:/mosquitto/utils:rw
      - ./mosquitto/data:/mosquitto/data:rw
      - ./mosquitto/log:/mosquitto/log:rw
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      firenet: 
        ipv4_address: "192.168.80.2"
  influxdb:
    image: influxdb:2.0
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - ./influxdb/influxdb:/var/lib/influxdb:rw
      - ./influxdb/influxdb2:/var/lib/influxdb2:rw
      - ./influxdb/influxdb2-utils:/etc/influxdb2:rw
      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:rw
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_ADMIN_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_V2_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_V2_BUCKET}
    networks:
      firenet: 
        ipv4_address: "192.168.80.3"

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    user: "0"
    ports:
      - '3000:3000'
    volumes:
      - ./grafana/data:/var/lib/grafana
    networks:
      firenet: 
        ipv4_address: "192.168.80.4"

  actor-app:
    image: daddyornot/actor-app:latest
    container_name: actor
    restart: unless-stopped
    ports:
      - '8001:8000'
    volumes:
      - ./logs:/app/logs
    networks:
      firenet: 
        ipv4_address: "192.168.80.5"

  relay-mqtt-db:
    image: daddyornot/relay-mqtt-db:latest
    container_name: relay-mqtt-db
    restart: unless-stopped
    ports:
      - '8002:8002'
    volumes:
      - ./logs:/app/logs
    networks:
      firenet: 
        ipv4_address: "192.168.80.6"

#  relay-mqtt-webserver:
#    container_name: relay-api
#    build:
#      context: ../../simulator/relay-mqtt-webserver
#      dockerfile: Dockerfile
#    ports:
#      - '8100:8100'
#    networks:
#      firenet:
#        ipv4_address: "192.168.80.200"

#  test:
#    image: alpine:latest
#    container_name: test
#    ports:
#      - '8456:8456'
#    networks:
#      firenet:

#  db:
#    build:
#      context: ../../docker-pg-databases
#      dockerfile: dockerfile
#    ports:
#      - "5432:5432"
#    volumes:
#      - db_data:/var/lib/postgresql/data
#
#  data-center-webserver:
#    build:
#      context: ../webserver
#      dockerfile: DockerfileDataCenter
#    network_mode: host
#
#  simu-webserver:
#    build:
#      context: ../../simulator/webserver
#      dockerfile: DockerfileSimulatorWebServer
#    network_mode: host

#  emergency-manager:
#    container_name: emergency-manager
#    build:
#      context: ../../data-center/emergency-manager
#      dockerfile: Dockerfile
#    network_mode: host
#
#  simulator-manager:
#    container_name: simulator-manager
#    build:
#      context: ../../simulator/simulator-manager
#      dockerfile: Dockerfile
#    network_mode: host


#  emergency-view:
#    container_name: emergency-view
#    build:
#      context: ../../data-center/emergency-view
#      dockerfile: DockerfileEmerView
#    network_mode: host
#
#  simulator-view:
#    container_name: simulator-view
#    build:
#      context: ../../simulator/simulator-view
#      dockerfile: DockerfileSimView
#    network_mode: host

volumes:
  mosquitto:
  influxdb:
  grafana:
  actor:
#  relay-mqtt-db:
#  db_data:

networks:
  firenet:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.80.0/24"